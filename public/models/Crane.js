/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 ..\models\Crane.glb --output output\Crane.js --keepnames --shadows 
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'
import modelsFolder from 'constants/modelsFolder';
const link = `${modelsFolder}Crane.glb`;

export function ModelJToastieCrane(props) {
  const { nodes, materials } = useGLTF(link)
  return (
    <group {...props} dispose={null} scale={0.5}>
      <mesh name="Cube001" castShadow receiveShadow geometry={nodes.Cube001.geometry} material={materials.Yellow} />
      <mesh name="Concrete_Cube007" castShadow receiveShadow geometry={nodes.Concrete_Cube007.geometry} material={materials.Concrete} />
      <mesh name="Crane_Cylinder-Mesh" castShadow receiveShadow geometry={nodes['Crane_Cylinder-Mesh'].geometry} material={materials.Yellow} />
      <mesh name="Crane_Cylinder-Mesh_1" castShadow receiveShadow geometry={nodes['Crane_Cylinder-Mesh_1'].geometry} material={materials.Black} />
      <mesh name="Crane_Cylinder-Mesh_2" castShadow receiveShadow geometry={nodes['Crane_Cylinder-Mesh_2'].geometry} material={materials.Window} />
      <mesh name="Crane_Cylinder-Mesh_3" castShadow receiveShadow geometry={nodes['Crane_Cylinder-Mesh_3'].geometry} material={materials.Concrete} />
      <mesh name="Crane_Cylinder-Mesh_4" castShadow receiveShadow geometry={nodes['Crane_Cylinder-Mesh_4'].geometry} material={materials.White} />
      <mesh name="Crane_Cylinder-Mesh_5" castShadow receiveShadow geometry={nodes['Crane_Cylinder-Mesh_5'].geometry} material={materials.Metal} />
    </group>
  )
}

useGLTF.preload(link)
